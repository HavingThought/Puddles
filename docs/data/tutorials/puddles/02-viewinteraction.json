{"variants":[{"paths":["\/tutorials\/puddles\/02-viewinteraction"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Communication between a view and its "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" should be unidirectional."}]}],"estimatedTimeInMinutes":10,"title":"Coordinator-View Interactions","image":"Background1.png","chapter":"Starting With Puddles","kind":"hero","backgroundImage":"Background1.png"},{"kind":"tasks","tasks":[{"anchor":"Expanding-The-View-Interface","title":"Expanding The View Interface","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the previous tutorial, we built a simple counter view that communicated with the interface to modify its own state. In the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" pattern, this is discouraged."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Views should not modify their own public state. Instead, they define signals (called actions) that their "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" can intercept and act upon."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be achieved through the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/ViewInterface"},{"type":"text","text":" protocol. It exposes a property "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/ViewInterface\/actionPublisher"},{"type":"text","text":" that consumes an "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" (usually an "},{"type":"codeVoice","code":"enum"},{"type":"text","text":"). A "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" automatically subscribes to that publisher and calls a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/handleAction(_:)-4le7d"},{"type":"text","text":" method that we can implement to react to any actions sent by the view. Inside that method, we would modify the view’s state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding this to the example app is easy."}]}]}],"stepsSection":[{"code":"02-ViewInteractions-01-01","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"HomeView"},{"type":"text","text":" from the previous tutorial."}]}],"caption":[],"type":"step","runtimePreview":"02-ViewInteractions-01-01_image.png","media":null},{"code":"02-ViewInteractions-01-02","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add an "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" enum and set it as the type that the "},{"type":"codeVoice","code":"actionPublisher"},{"type":"text","text":" emits."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"02-ViewInteractions-01-03","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Replace the call to "},{"type":"codeVoice","code":"buttonTapped()"},{"type":"text","text":" with a call to send the action "},{"type":"codeVoice","code":".buttonTapped"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The view is now fully unaware of its context or consequences for its actions. This is great, because we can now place it anywhere in the app and let the responsible "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" decide what should happen."}]}],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we need to listen to the sent actions in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"."}]},{"code":"02-ViewInteractions-01-04","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to "},{"type":"codeVoice","code":"Root.swift"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting the "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" type in the view interface triggers a new protocol requirement in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":". We now need to provide a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/handleAction(_:)-4le7d"},{"type":"text","text":" method to handle all incoming actions from the view."}]},{"code":"02-ViewInteractions-01-05","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/handleAction(_:)-38d52"},{"type":"text","text":" method."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"02-ViewInteractions-01-06","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can now switch over all actions and update the view’s state through its interface. This is similar to before, but now we do it from within the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The result is identical to the one we built in the previous tutorial, but much cleaner and modular."}]}],"type":"step","runtimePreview":"02-ViewInteractions-02-06_image.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Adding Navigation To The Coordinator","abstract":[{"type":"text","text":"Navigation is fully handled by the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":", so any "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"s should be defined in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}]}],"identifier":{"url":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Coordinator-View Interactions","categoryPathComponent":"PuddlesTutorials","role":"project","category":"Coordinator"},"hierarchy":{"modules":[{"reference":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/Starting-With-Puddles","projects":[{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Root-Coordinator"},{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Home-View"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction#Expanding-The-View-Interface"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-Sheet-Presentation"},{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-NavigationLink"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport#Adding-Previews-Support"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#The-Naive-Approach"},{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#A-Better-Approach"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData#Section-1"}]}]}],"reference":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials","paths":[["doc:\/\/Puddles\/tutorials\/PuddlesTutorials","doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/$volume","doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/Starting-With-Puddles"]]},"references":{"doc://Puddles/tutorials/Puddles/01-Introduction#The-Root-Coordinator":{"role":"pseudoSymbol","title":"The Root Coordinator","abstract":[{"type":"text","text":"Building an app using "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is easy and fast."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Root-Coordinator","kind":"section","type":"section","url":"\/tutorials\/puddles\/01-introduction#The-Root-Coordinator"},"02-ViewInteractions-01-06":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct Root: Coordinator {","    @StateObject var interface: HomeView.Interface = .init()","","    var entryView: some View {","        HomeView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        \/\/ Empty for now","    }","","    func handleAction(_ action: Action) async {","        switch action {","        case .buttonTapped:","            interface.buttonTapCount += 1","        }","    }","}"],"fileName":"Root.swift","identifier":"02-ViewInteractions-01-06","type":"file","fileType":"swift","highlights":[{"line":16},{"line":17},{"line":18},{"line":19}]},"doc://Puddles/documentation/Puddles/Coordinator/interface-swift.property-4rvqq":{"defaultImplementations":1,"role":"symbol","title":"interface","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"interface"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interface","preciseIdentifier":"s:7Puddles11CoordinatorP9InterfaceQa"}],"abstract":[{"type":"text","text":"An interface, usually connected to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator"},{"type":"text","text":"s "},{"type":"codeVoice","code":"entryView"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/interface-swift.property-4rvqq","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/puddles\/coordinator\/interface-swift.property-4rvqq"},"doc://Puddles/tutorials/Puddles/03-BasicNavigation":{"role":"project","title":"Adding Navigation To The Coordinator","estimatedTime":"10min","abstract":[{"type":"text","text":"Navigation is fully handled by the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":", so any "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"s should be defined in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation","kind":"project","type":"topic","url":"\/tutorials\/puddles\/03-basicnavigation"},"doc://Puddles/tutorials/Puddles/04-PreviewSupport#Adding-Previews-Support":{"role":"pseudoSymbol","title":"Adding Previews Support","abstract":[{"type":"text","text":"Previewing complex and data-driven views can be troublesome and annoying. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Preview"},{"type":"text","text":" helper, along with the architecture that "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is built upon, tries to make it as easy and yet powerful as possible."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport#Adding-Previews-Support","kind":"section","type":"section","url":"\/tutorials\/puddles\/04-previewsupport#Adding-Previews-Support"},"doc://Puddles/tutorials/Puddles/03-BasicNavigation#Adding-a-NavigationLink":{"role":"pseudoSymbol","title":"Adding a NavigationLink","abstract":[{"type":"text","text":"Navigation is fully handled by the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":", so any "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"s should be defined in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-NavigationLink","kind":"section","type":"section","url":"\/tutorials\/puddles\/03-basicnavigation#Adding-a-NavigationLink"},"doc://Puddles/documentation/Puddles/Coordinator/handleAction(_:)-38d52":{"defaultImplementations":1,"role":"symbol","title":"handleAction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleAction"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:7Puddles11CoordinatorP6Actiona"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"A method you can provide to handle incoming actions from the  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/interface-swift.property-4rvqq"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/handleAction(_:)-38d52","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/puddles\/coordinator\/handleaction(_:)-38d52"},"02-ViewInteractions-01-04":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct Root: Coordinator {","    @StateObject var interface: HomeView.Interface = .init()","","    var entryView: some View {","        HomeView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        \/\/ Empty for now","    }","","}"],"fileName":"Root.swift","identifier":"02-ViewInteractions-01-04","type":"file","fileType":"swift","highlights":[]},"doc://Puddles/documentation/Puddles/Coordinator/handleAction(_:)-4le7d":{"conformance":{"constraints":[{"type":"codeVoice","code":"Interface.Action"},{"type":"text","text":" is "},{"type":"codeVoice","code":"NoAction"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"handleAction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleAction"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:7Puddles11CoordinatorP6Actiona"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"A method you can provide to handle incoming actions from the  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/interface-swift.property-4rvqq"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/handleAction(_:)-4le7d","kind":"symbol","type":"topic","url":"\/documentation\/puddles\/coordinator\/handleaction(_:)-4le7d"},"doc://Puddles/tutorials/Puddles/01-Introduction":{"role":"project","title":"Building The First Coordinator","estimatedTime":"10min","abstract":[{"type":"text","text":"Building an app using "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is easy and fast."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction","kind":"project","type":"topic","url":"\/tutorials\/puddles\/01-introduction"},"doc://Puddles/documentation/Puddles/Preview":{"role":"symbol","title":"Preview","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Preview"}],"abstract":[{"type":"text","text":"A SwiftUI previews helper type allowing to take advantage of view interfacing by providing an in-place mechanism of reacting to the view’s actions."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Preview","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Preview"}],"url":"\/documentation\/puddles\/preview"},"doc://Puddles/tutorials/Puddles/06-ProvidingData":{"role":"project","title":"Providing Data To The Coordinator","estimatedTime":"10min","abstract":[{"type":"text","text":"Dependency Injection is essential in keeping code reusable, testable and previewable."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData","kind":"project","type":"topic","url":"\/tutorials\/puddles\/06-providingdata"},"02-ViewInteractions-02-06_image.png":{"alt":"A screenshot of an iPhone running the app. It shows the home view.","type":"image","identifier":"02-ViewInteractions-02-06_image.png","variants":[{"url":"\/images\/02-ViewInteractions-02-06_image.png","traits":["1x","light"]}]},"02-ViewInteractions-01-01_image.png":{"alt":"A screenshot of an iPhone running the app. It shows the home view.","type":"image","identifier":"02-ViewInteractions-01-01_image.png","variants":[{"url":"\/images\/02-ViewInteractions-01-01_image.png","traits":["1x","light"]}]},"doc://Puddles/tutorials/Puddles/01-Introduction#The-Home-View":{"role":"pseudoSymbol","title":"The Home View","abstract":[{"type":"text","text":"Building an app using "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is easy and fast."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Home-View","kind":"section","type":"section","url":"\/tutorials\/puddles\/01-introduction#The-Home-View"},"doc://Puddles/documentation/Puddles/Coordinator/navigation()":{"role":"symbol","title":"navigation()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigation"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"NavigationContent","preciseIdentifier":"s:7Puddles11CoordinatorP17NavigationContentQa"}],"abstract":[{"type":"text","text":"The navigation content that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator"},{"type":"text","text":" defines."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/puddles\/coordinator\/navigation()"},"doc://Puddles/tutorials/Puddles/06-ProvidingData#Section-1":{"role":"pseudoSymbol","title":"Section 1","abstract":[{"type":"text","text":"Dependency Injection is essential in keeping code reusable, testable and previewable."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData#Section-1","kind":"section","type":"section","url":"\/tutorials\/puddles\/06-providingdata#Section-1"},"doc://Puddles/documentation/Puddles/ViewInterface/actionPublisher":{"role":"symbol","title":"actionPublisher","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionPublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PassthroughSubject","preciseIdentifier":"s:7Combine18PassthroughSubjectC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:7Puddles13ViewInterfaceP6ActionQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"The publisher emitting signals that are subscribed to by a "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/ViewInterface\/actionPublisher","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/puddles\/viewinterface\/actionpublisher"},"doc://Puddles/tutorials/Puddles/05-Expectations#A-Better-Approach":{"role":"pseudoSymbol","title":"A Better Approach","abstract":[{"type":"text","text":"Closing the gap between actions and their effects."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#A-Better-Approach","kind":"section","type":"section","url":"\/tutorials\/puddles\/05-expectations#A-Better-Approach"},"doc://Puddles/tutorials/Puddles/04-PreviewSupport":{"role":"project","title":"Supporting Previews","estimatedTime":"5min","abstract":[{"type":"text","text":"Previewing complex and data-driven views can be troublesome and annoying. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Preview"},{"type":"text","text":" helper, along with the architecture that "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is built upon, tries to make it as easy and yet powerful as possible."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport","kind":"project","type":"topic","url":"\/tutorials\/puddles\/04-previewsupport"},"doc://Puddles/tutorials/Puddles/05-Expectations":{"role":"project","title":"Waiting For Data From A Navigation Destination","estimatedTime":"10min","abstract":[{"type":"text","text":"Closing the gap between actions and their effects."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations","kind":"project","type":"topic","url":"\/tutorials\/puddles\/05-expectations"},"Background1.png":{"alt":"A colorful, abstract background image","type":"image","identifier":"Background1.png","variants":[{"url":"\/images\/Background1.png","traits":["1x","light"]}]},"doc://Puddles/documentation/Puddles/Coordinator":{"role":"symbol","title":"Coordinator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coordinator"}],"abstract":[{"type":"text","text":"A type that coordinates the navigation and data management of a "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Coordinator"}],"url":"\/documentation\/puddles\/coordinator"},"doc://Puddles/tutorials/PuddlesTutorials/Starting-With-Puddles":{"role":"article","title":"Starting With Puddles","abstract":[],"identifier":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/Starting-With-Puddles","kind":"article","type":"topic","url":"\/tutorials\/puddlestutorials\/starting-with-puddles"},"doc://Puddles/tutorials/PuddlesTutorials":{"role":"overview","title":"Meet Puddles","abstract":[{"type":"text","text":"An architectural pattern for apps built on the SwiftUI lifecycle. It helps separating navigation and logic from the views."}],"identifier":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials","kind":"overview","type":"topic","url":"\/tutorials\/puddlestutorials"},"doc://Puddles/tutorials/Puddles/03-BasicNavigation#Adding-a-Sheet-Presentation":{"role":"pseudoSymbol","title":"Adding a Sheet Presentation","abstract":[{"type":"text","text":"Navigation is fully handled by the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":", so any "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"s should be defined in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-Sheet-Presentation","kind":"section","type":"section","url":"\/tutorials\/puddles\/03-basicnavigation#Adding-a-Sheet-Presentation"},"doc://Puddles/documentation/Puddles/ViewInterface":{"role":"symbol","title":"ViewInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewInterface"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" that provides the means of sending signals to a "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/ViewInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewInterface"}],"url":"\/documentation\/puddles\/viewinterface"},"doc://Puddles/tutorials/Puddles/05-Expectations#The-Naive-Approach":{"role":"pseudoSymbol","title":"The Naive Approach","abstract":[{"type":"text","text":"Closing the gap between actions and their effects."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#The-Naive-Approach","kind":"section","type":"section","url":"\/tutorials\/puddles\/05-expectations#The-Naive-Approach"},"doc://Puddles/tutorials/Puddles/02-ViewInteraction#Expanding-The-View-Interface":{"role":"pseudoSymbol","title":"Expanding The View Interface","abstract":[{"type":"text","text":"Communication between a view and its "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" should be unidirectional."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction#Expanding-The-View-Interface","kind":"section","type":"section","url":"\/tutorials\/puddles\/02-viewinteraction#Expanding-The-View-Interface"},"02-ViewInteractions-01-05":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct Root: Coordinator {","    @StateObject var interface: HomeView.Interface = .init()","","    var entryView: some View {","        HomeView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        \/\/ Empty for now","    }","","    func handleAction(_ action: Action) async {","","    }","}"],"fileName":"Root.swift","identifier":"02-ViewInteractions-01-05","type":"file","fileType":"swift","highlights":[{"line":15},{"line":16},{"line":17}]},"doc://Puddles/tutorials/Puddles/02-ViewInteraction":{"role":"project","title":"Coordinator-View Interactions","estimatedTime":"10min","abstract":[{"type":"text","text":"Communication between a view and its "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" should be unidirectional."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction","kind":"project","type":"topic","url":"\/tutorials\/puddles\/02-viewinteraction"},"02-ViewInteractions-01-03":{"syntax":"swift","content":["import SwiftUI","import Puddles","import Combine","","struct HomeView: View {","    @ObservedObject var interface: Interface","","    var body: some View {","        VStack {","          Text(\"Button tapped \\(interface.buttonTapCount) times.\")","          Button(\"Tap Me\") {","              interface.sendAction(.buttonTapped)","          }","        }","    }","","}","","extension HomeView {","    @MainActor final class Interface: ViewInterface {","        var actionPublisher: PassthroughSubject<Action, Never> = .init()","","        @Published var buttonTapCount: Int = 0","    }","","    enum Action {","        case buttonTapped","    }","}"],"fileName":"HomeView.swift","identifier":"02-ViewInteractions-01-03","type":"file","fileType":"swift","highlights":[{"line":12}]},"02-ViewInteractions-01-01":{"syntax":"swift","content":["import SwiftUI","import Puddles","import Combine","","struct HomeView: View {","    @ObservedObject var interface: Interface","","    var body: some View {","        VStack {","          Text(\"Button tapped \\(interface.buttonTapCount) times.\")","          Button(\"Tap Me\") {","              interface.buttonTapped()","          }","        }","    }","","}","","extension HomeView {","    @MainActor final class Interface: ViewInterface {","        var actionPublisher: PassthroughSubject<NoAction, Never> = .init()","","        @Published var buttonTapCount: Int = 0","","        func buttonTapped() {","            buttonTapCount += 1","        }","    }","}"],"fileName":"HomeView.swift","identifier":"02-ViewInteractions-01-01","type":"file","fileType":"swift","highlights":[]},"02-ViewInteractions-01-02":{"syntax":"swift","content":["import SwiftUI","import Puddles","import Combine","","struct HomeView: View {","    @ObservedObject var interface: Interface","","    var body: some View {","        VStack {","          Text(\"Button tapped \\(interface.buttonTapCount) times.\")","          Button(\"Tap Me\") {","              interface.buttonTapped()","          }","        }","    }","","}","","extension HomeView {","    @MainActor final class Interface: ViewInterface {","        var actionPublisher: PassthroughSubject<Action, Never> = .init()","","        @Published var buttonTapCount: Int = 0","","        func buttonTapped() {","            buttonTapCount += 1","        }","    }","","    enum Action {","        case buttonTapped","    }","}"],"fileName":"HomeView.swift","identifier":"02-ViewInteractions-01-02","type":"file","fileType":"swift","highlights":[{"line":21},{"line":29},{"line":30},{"line":31},{"line":32}]}}}