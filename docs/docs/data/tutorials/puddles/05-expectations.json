{"variants":[{"paths":["\/tutorials\/puddles\/05-expectations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closing the gap between actions and their effects."}]}],"estimatedTimeInMinutes":10,"title":"Waiting For Data From A Navigation Destination","image":"Background1.png","chapter":"Starting With Puddles","kind":"hero","backgroundImage":"Background1.png"},{"kind":"tasks","tasks":[{"anchor":"The-Naive-Approach","title":"The Naive Approach","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes an action triggers a flow that requires user input or some form of other delayed and disconnected data to complete. An example of this would be a confirmation dialog for a deletion process."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Such a dialog would typically be triggered from within a "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"‘s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/handleAction(_:)-4le7d"},{"type":"text","text":" method and finished within the dialog’s completion handlers. This logically separates the deletion flow and makes it harder to reason about the code. Let’s have a look at an example to see the solution to this problem."}]}]}],"stepsSection":[{"code":"expectations-01-01","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We start by adding a simple view containing a button that sends an action to its "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" via a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/ViewInterface"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The action is supposed to represent a delete intention. To make sure the button hasn’t been accidentally tapped, the app should display a confirmation dialog before actually deleting something."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"expectations-01-02","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we create a "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" for the view."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"We need a state that’s going to drive the confirmation dialog appearance, as well as the dialog view itself, which is an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Alert"},{"type":"text","text":" that we place inside the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}]},{"code":"expectations-01-03","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"isShowingConfirmationAlert"},{"type":"text","text":" and an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Alert"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Alert"},{"type":"text","text":" is only one of the available "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/NavigationPattern"},{"type":"text","text":"s. Others include "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Sheet"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Push"},{"type":"text","text":" and more."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"expectations-01-04","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we have to trigger the state whenever a "},{"type":"codeVoice","code":"deleteButtonTapped"},{"type":"text","text":" action has been sent."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, we need to add the actual deletion logic that should be triggered upon confirmation."}]},{"code":"expectations-01-05","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We add a "},{"type":"codeVoice","code":"delete()"},{"type":"text","text":" method and call it in the action handler of the confirmation button inside the alert."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case, the cancel button does not need an action, so we can leave it empty."}]}],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s it! However, in Section 2, we will take a look at a difference approach."}]}]},{"anchor":"A-Better-Approach","title":"A Better Approach","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The approach in Section 1 is fine, but it has a significant weakness: We ended up separating logically connected functionality."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The call to "},{"type":"codeVoice","code":"delete()"},{"type":"text","text":" is still an effect of the "},{"type":"codeVoice","code":"deleteButtonTapped"},{"type":"text","text":" action that we handle in "},{"type":"codeVoice","code":"handleAction(_:)"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The code, however, is split up, since the confirmation dialog with its completion handlers is defined someplace else."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s why the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" package introduces a concept called expectations. An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation"},{"type":"text","text":" is a type that can be used to trigger the collection of some kind of data (like a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" coming from a confirmation dialog) and asynchronously "},{"type":"codeVoice","code":"await"},{"type":"text","text":" its retrieval in-place, without ever leaving the scope."}]}]}],"stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s modify the example from Section 1 to use expectations."}]},{"code":"expectations-02-01","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to "},{"type":"codeVoice","code":"MyCoordinator.swift"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"expectations-02-02","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Replace "},{"type":"codeVoice","code":"isShowingConfirmationAlert"},{"type":"text","text":" with a new property of type "},{"type":"codeVoice","code":"Expectation<Bool>"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"since we expect to collect a boolean whenever we trigger the confirmation dialog."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Because a confirmation dialog cannot be externally cancelled by the user (like a dismissible sheet, for instance), we initialize the expectation with the promise of a guaranteed result, calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/guaranteedCompletion()"},{"type":"text","text":". When no such guarantee is possible or reasonable, there is another initializer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/userCancellable(resultOnUserCancel:)"},{"type":"text","text":" that let’s us specify what should happen when the expectation gets cancelled by the user or through other means."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"expectations-02-03","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, wrap the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Alert"},{"type":"text","text":" in a new type called "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expecting"},{"type":"text","text":". It takes a binding to an expectation as its argument and provides us with a closure that we can use to display any kind of navigation pattern."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure has two arguments. First, it gives us a binding to an "},{"type":"codeVoice","code":"isActive"},{"type":"text","text":" state that we can pass to the presentation. It also gives us an expectation resolver that we can use to complete (or fulfill) the expectation."}]}],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, we can modify the "},{"type":"codeVoice","code":"handleAction(_:)"},{"type":"text","text":" method to take advantage of the new expectation."}]},{"code":"expectations-02-04","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To show the confirmation alert, add a call to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/show()"},{"type":"text","text":" on the expectation. Then we can simply "},{"type":"codeVoice","code":"await"},{"type":"text","text":" the result through its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/result"},{"type":"text","text":" property. Lastly, we call "},{"type":"codeVoice","code":"delete()"},{"type":"text","text":" if necessary."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The entire logical flow caused by the "},{"type":"codeVoice","code":"deleteButtonTapped"},{"type":"text","text":" action now takes place inside the same call to "},{"type":"codeVoice","code":"handleAction(_:)"},{"type":"text","text":"."}]}],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Providing Data To The Coordinator","abstract":[{"type":"text","text":"Dependency Injection is essential in keeping code reusable, testable and previewable."}]}],"identifier":{"url":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Waiting For Data From A Navigation Destination","categoryPathComponent":"PuddlesTutorials","role":"project","category":"Coordinator"},"hierarchy":{"modules":[{"reference":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/Starting-With-Puddles","projects":[{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Root-Coordinator"},{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Home-View"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction#Expanding-The-View-Interface"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-Sheet-Presentation"},{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-NavigationLink"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport#Adding-Previews-Support"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#The-Naive-Approach"},{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#A-Better-Approach"}]},{"reference":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData","sections":[{"kind":"task","reference":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData#Section-1"}]}]}],"reference":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials","paths":[["doc:\/\/Puddles\/tutorials\/PuddlesTutorials","doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/$volume","doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/Starting-With-Puddles"]]},"references":{"doc://Puddles/documentation/Puddles/Coordinator/interface-swift.property-4rvqq":{"defaultImplementations":1,"role":"symbol","title":"interface","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"interface"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Interface","preciseIdentifier":"s:7Puddles11CoordinatorP9InterfaceQa"}],"abstract":[{"type":"text","text":"An interface, usually connected to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator"},{"type":"text","text":"s "},{"type":"codeVoice","code":"entryView"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/interface-swift.property-4rvqq","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/puddles\/coordinator\/interface-swift.property-4rvqq"},"doc://Puddles/tutorials/Puddles/06-ProvidingData":{"role":"project","title":"Providing Data To The Coordinator","estimatedTime":"10min","abstract":[{"type":"text","text":"Dependency Injection is essential in keeping code reusable, testable and previewable."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData","kind":"project","type":"topic","url":"\/tutorials\/puddles\/06-providingdata"},"doc://Puddles/documentation/Puddles/Coordinator":{"role":"symbol","title":"Coordinator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coordinator"}],"abstract":[{"type":"text","text":"A type that coordinates the navigation and data management of a "},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Coordinator"}],"url":"\/documentation\/puddles\/coordinator"},"doc://Puddles/documentation/Puddles/Push":{"role":"symbol","title":"Push","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Push"}],"abstract":[{"type":"text","text":"A view that controls a navigation presentation."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Push","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Push"}],"url":"\/documentation\/puddles\/push"},"expectations-02-02":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    @State private var deletionConfirmation = Expectation<Bool>.guaranteedCompletion()","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        Alert(","            title: \"Do you want to delete this?\",","            isPresented: $isShowingConfirmationAlert) {","                Button(\"Cancel\", role: .cancel) {","                    \/\/ Do nothing","                }","                Button(\"OK\") {","                    delete()","                }","            } message: {","                Text(\"This cannot be reversed!\")","            }","    }","","    func handleAction(_ action: Action) async {","        switch action {","        case .deleteButtonTapped:","            isShowingConfirmationAlert = true","        }","    }","","    private func delete() {","        \/\/ Apply the deletion","    }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-02-02","type":"file","fileType":"swift","highlights":[{"line":7}]},"doc://Puddles/tutorials/PuddlesTutorials":{"role":"overview","title":"Meet Puddles","abstract":[{"type":"text","text":"An architectural pattern for apps built on the SwiftUI lifecycle. It helps separating navigation and logic from the views."}],"identifier":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials","kind":"overview","type":"topic","url":"\/tutorials\/puddlestutorials"},"doc://Puddles/documentation/Puddles/NavigationPattern":{"role":"symbol","title":"NavigationPattern","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationPattern"}],"abstract":[{"type":"text","text":"Wrapper protocol around "},{"type":"codeVoice","code":"View"},{"type":"text","text":" to limit the scope of allowed types within the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/NavigationBuilder"},{"type":"text","text":" result builder."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/NavigationPattern","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationPattern"}],"url":"\/documentation\/puddles\/navigationpattern"},"doc://Puddles/tutorials/Puddles/02-ViewInteraction":{"role":"project","title":"Coordinator-View Interactions","estimatedTime":"10min","abstract":[{"type":"text","text":"Communication between a view and its "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" should be unidirectional."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction","kind":"project","type":"topic","url":"\/tutorials\/puddles\/02-viewinteraction"},"doc://Puddles/documentation/Puddles/Expectation/guaranteedCompletion()":{"role":"symbol","title":"guaranteedCompletion()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"guaranteedCompletion"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Expectation","preciseIdentifier":"s:7Puddles11ExpectationV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ExpectedType","preciseIdentifier":"s:7Puddles11ExpectationV12ExpectedTypexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Initializes an expectation that is guaranteed not to be interrupted and cancelled by user interaction."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/guaranteedCompletion()","kind":"symbol","type":"topic","url":"\/documentation\/puddles\/expectation\/guaranteedcompletion()"},"doc://Puddles/documentation/Puddles/Expectation/result":{"role":"symbol","title":"result","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ExpectedType","preciseIdentifier":"s:7Puddles11ExpectationV12ExpectedTypexmfp"}],"abstract":[{"type":"text","text":"The result of the expectation."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/result","kind":"symbol","type":"topic","url":"\/documentation\/puddles\/expectation\/result"},"doc://Puddles/documentation/Puddles/Preview":{"role":"symbol","title":"Preview","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Preview"}],"abstract":[{"type":"text","text":"A SwiftUI previews helper type allowing to take advantage of view interfacing by providing an in-place mechanism of reacting to the view’s actions."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Preview","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Preview"}],"url":"\/documentation\/puddles\/preview"},"doc://Puddles/tutorials/Puddles/01-Introduction#The-Home-View":{"role":"pseudoSymbol","title":"The Home View","abstract":[{"type":"text","text":"Building an app using "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is easy and fast."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Home-View","kind":"section","type":"section","url":"\/tutorials\/puddles\/01-introduction#The-Home-View"},"doc://Puddles/tutorials/Puddles/05-Expectations":{"role":"project","title":"Waiting For Data From A Navigation Destination","estimatedTime":"10min","abstract":[{"type":"text","text":"Closing the gap between actions and their effects."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations","kind":"project","type":"topic","url":"\/tutorials\/puddles\/05-expectations"},"doc://Puddles/tutorials/Puddles/04-PreviewSupport":{"role":"project","title":"Supporting Previews","estimatedTime":"5min","abstract":[{"type":"text","text":"Previewing complex and data-driven views can be troublesome and annoying. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Preview"},{"type":"text","text":" helper, along with the architecture that "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is built upon, tries to make it as easy and yet powerful as possible."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport","kind":"project","type":"topic","url":"\/tutorials\/puddles\/04-previewsupport"},"doc://Puddles/documentation/Puddles/Coordinator/navigation()":{"role":"symbol","title":"navigation()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigation"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"NavigationContent","preciseIdentifier":"s:7Puddles11CoordinatorP17NavigationContentQa"}],"abstract":[{"type":"text","text":"The navigation content that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator"},{"type":"text","text":" defines."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/puddles\/coordinator\/navigation()"},"doc://Puddles/documentation/Puddles/Expectation":{"role":"symbol","title":"Expectation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expectation"}],"abstract":[{"type":"text","text":"A type that can be used to trigger the collection of some kind of disconnected, delayed data (like a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" coming from a confirmation dialog view) and asynchronously "},{"type":"codeVoice","code":"await"},{"type":"text","text":" its retrieval in-place, without ever leaving the original scope."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Expectation"}],"url":"\/documentation\/puddles\/expectation"},"doc://Puddles/documentation/Puddles/Expecting":{"role":"symbol","title":"Expecting","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Expecting"}],"abstract":[{"type":"text","text":"A navigation wrapper using an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation"},{"type":"text","text":" to retrieve delayed asynchronous data from a contained presentation. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation"},{"type":"text","text":" for more information."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expecting","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Expecting"}],"url":"\/documentation\/puddles\/expecting"},"expectations-01-04":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    @State private var isShowingConfirmationAlert: Bool = false","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        Alert(","            title: \"Do you want to delete this?\",","            isPresented: $isShowingConfirmationAlert) {","                Button(\"Cancel\", role: .cancel) {","                    \/\/ Cancel","                }","                Button(\"OK\") {","                    \/\/ Confirm","                }","            } message: {","                Text(\"This cannot be reversed!\")","            }","    }","","    func handleAction(_ action: Action) async {","        switch action {","        case .deleteButtonTapped:","            isShowingConfirmationAlert = true","        }","   }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-01-04","type":"file","fileType":"swift","highlights":[{"line":29},{"line":30},{"line":31},{"line":32},{"line":33}]},"doc://Puddles/tutorials/Puddles/04-PreviewSupport#Adding-Previews-Support":{"role":"pseudoSymbol","title":"Adding Previews Support","abstract":[{"type":"text","text":"Previewing complex and data-driven views can be troublesome and annoying. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Preview"},{"type":"text","text":" helper, along with the architecture that "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is built upon, tries to make it as easy and yet powerful as possible."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/04-PreviewSupport#Adding-Previews-Support","kind":"section","type":"section","url":"\/tutorials\/puddles\/04-previewsupport#Adding-Previews-Support"},"doc://Puddles/tutorials/Puddles/02-ViewInteraction#Expanding-The-View-Interface":{"role":"pseudoSymbol","title":"Expanding The View Interface","abstract":[{"type":"text","text":"Communication between a view and its "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" should be unidirectional."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/02-ViewInteraction#Expanding-The-View-Interface","kind":"section","type":"section","url":"\/tutorials\/puddles\/02-viewinteraction#Expanding-The-View-Interface"},"expectations-02-04":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    @State private var deletionConfirmation = Expectation<Bool>.guaranteedCompletion()","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        Expecting($deletionConfirmation) { isActive, expectation in","            Alert(","                title: \"Do you want to delete this?\",","                isPresented: isActive) {","                    Button(\"Cancel\", role: .cancel) {","                        expectation.complete(with: false)","                    }","                    Button(\"OK\") {","                        expectation.complete(with: true)","                    }","                } message: {","                    Text(\"This cannot be reversed!\")","                }","        }","    }","","    func handleAction(_ action: Action) async {","        switch action {","        case .deleteButtonTapped:","            deletionConfirmation.show()","            if await deletionConfirmation.result {","                delete()","            }","            \/\/ Alerts close automatically, so no need to do it manually","        }","    }","","    private func delete() {","        \/\/ Apply the deletion","    }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-02-04","type":"file","fileType":"swift","highlights":[{"line":33},{"line":34},{"line":35},{"line":36},{"line":37}]},"doc://Puddles/documentation/Puddles/Expectation/userCancellable(resultOnUserCancel:)":{"role":"symbol","title":"userCancellable(resultOnUserCancel:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"userCancellable"},{"kind":"text","text":"("},{"kind":"externalParam","text":"resultOnUserCancel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ExpectedType","preciseIdentifier":"s:7Puddles11ExpectationV12ExpectedTypexmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Expectation","preciseIdentifier":"s:7Puddles11ExpectationV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ExpectedType","preciseIdentifier":"s:7Puddles11ExpectationV12ExpectedTypexmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Initializes an expectation that could be interrupted by user interaction."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/userCancellable(resultOnUserCancel:)","kind":"symbol","type":"topic","url":"\/documentation\/puddles\/expectation\/usercancellable(resultonusercancel:)"},"doc://Puddles/tutorials/Puddles/05-Expectations#A-Better-Approach":{"role":"pseudoSymbol","title":"A Better Approach","abstract":[{"type":"text","text":"Closing the gap between actions and their effects."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#A-Better-Approach","kind":"section","type":"section","url":"\/tutorials\/puddles\/05-expectations#A-Better-Approach"},"expectations-02-03":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    @State private var deletionConfirmation = Expectation<Bool>.guaranteedCompletion()","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        Expecting($deletionConfirmation) { isActive, expectation in","            Alert(","                title: \"Do you want to delete this?\",","                isPresented: isActive) {","                    Button(\"Cancel\", role: .cancel) {","                        expectation.complete(with: false)","                    }","                    Button(\"OK\") {","                        expectation.complete(with: true)","                    }","                } message: {","                    Text(\"This cannot be reversed!\")","                }","        }","    }","","    func handleAction(_ action: Action) async {","        switch action {","        case .deleteButtonTapped:","            isShowingConfirmationAlert = true","        }","    }","","    private func delete() {","        \/\/ Apply the deletion","    }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-02-03","type":"file","fileType":"swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":27}]},"doc://Puddles/documentation/Puddles/NavigationBuilder":{"role":"symbol","title":"NavigationBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationBuilder"}],"abstract":[{"type":"text","text":"A NavigationBuilder allows for a convenient creation of a list of navigation patterns, like "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"NavigationLinks"},{"type":"text","text":" or "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/NavigationBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationBuilder"}],"url":"\/documentation\/puddles\/navigationbuilder"},"doc://Puddles/tutorials/Puddles/01-Introduction":{"role":"project","title":"Building The First Coordinator","estimatedTime":"10min","abstract":[{"type":"text","text":"Building an app using "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is easy and fast."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction","kind":"project","type":"topic","url":"\/tutorials\/puddles\/01-introduction"},"doc://Puddles/tutorials/Puddles/03-BasicNavigation":{"role":"project","title":"Adding Navigation To The Coordinator","estimatedTime":"10min","abstract":[{"type":"text","text":"Navigation is fully handled by the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":", so any "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"s should be defined in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation","kind":"project","type":"topic","url":"\/tutorials\/puddles\/03-basicnavigation"},"doc://Puddles/documentation/Puddles/Sheet":{"role":"symbol","title":"Sheet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Sheet"}],"abstract":[{"type":"text","text":"Presents a sheet when a binding to a Boolean value that you provide is true."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Sheet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Sheet"}],"url":"\/documentation\/puddles\/sheet"},"doc://Puddles/documentation/Puddles/Alert":{"role":"symbol","title":"Alert","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Alert"}],"abstract":[{"type":"text","text":"Presents an alert with a message and a title."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Alert","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Alert"}],"url":"\/documentation\/puddles\/alert"},"expectations-01-02":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","","    }","","    func handleAction(_ action: Action) async {","        \/\/ Handle action","    }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-01-02","type":"file","fileType":"swift","highlights":[]},"doc://Puddles/tutorials/Puddles/03-BasicNavigation#Adding-a-NavigationLink":{"role":"pseudoSymbol","title":"Adding a NavigationLink","abstract":[{"type":"text","text":"Navigation is fully handled by the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":", so any "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"s should be defined in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-NavigationLink","kind":"section","type":"section","url":"\/tutorials\/puddles\/03-basicnavigation#Adding-a-NavigationLink"},"doc://Puddles/tutorials/PuddlesTutorials/Starting-With-Puddles":{"role":"article","title":"Starting With Puddles","abstract":[],"identifier":"doc:\/\/Puddles\/tutorials\/PuddlesTutorials\/Starting-With-Puddles","kind":"article","type":"topic","url":"\/tutorials\/puddlestutorials\/starting-with-puddles"},"doc://Puddles/tutorials/Puddles/05-Expectations#The-Naive-Approach":{"role":"pseudoSymbol","title":"The Naive Approach","abstract":[{"type":"text","text":"Closing the gap between actions and their effects."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/05-Expectations#The-Naive-Approach","kind":"section","type":"section","url":"\/tutorials\/puddles\/05-expectations#The-Naive-Approach"},"doc://Puddles/tutorials/Puddles/03-BasicNavigation#Adding-a-Sheet-Presentation":{"role":"pseudoSymbol","title":"Adding a Sheet Presentation","abstract":[{"type":"text","text":"Navigation is fully handled by the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":", so any "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"alert"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"s should be defined in the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/navigation()"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/03-BasicNavigation#Adding-a-Sheet-Presentation","kind":"section","type":"section","url":"\/tutorials\/puddles\/03-basicnavigation#Adding-a-Sheet-Presentation"},"expectations-01-01":{"syntax":"swift","content":["import SwiftUI","import Puddles","import Combine","","struct MyView: View {","    @ObservedObject var interface: Interface","","    var body: some View {","        Button(\"Delete\") {","            interface.sendAction(.deleteButtonTapped)","        }","    }","}","","extension MyView {","    @MainActor final class Interface: ViewInterface {","        var actionPublisher: PassthroughSubject<Action, Never> = .init()","    }","","    enum Action {","        case deleteButtonTapped","    }","}"],"fileName":"MyView.swift","identifier":"expectations-01-01","type":"file","fileType":"swift","highlights":[]},"expectations-02-01":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    @State private var isShowingConfirmationAlert: Bool = false","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        Alert(","            title: \"Do you want to delete this?\",","            isPresented: $isShowingConfirmationAlert) {","                Button(\"Cancel\", role: .cancel) {","                    \/\/ Do nothing","                }","                Button(\"OK\") {","                    delete()","                }","            } message: {","                Text(\"This cannot be reversed!\")","            }","    }","","    func handleAction(_ action: Action) async {","        switch action {","        case .deleteButtonTapped:","            isShowingConfirmationAlert = true","        }","    }","","    private func delete() {","        \/\/ Apply the deletion","    }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-02-01","type":"file","fileType":"swift","highlights":[]},"doc://Puddles/documentation/Puddles/Expectation/show()":{"role":"symbol","title":"show()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"show"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Start the expectation by setting its "},{"type":"codeVoice","code":"isActive"},{"type":"text","text":" to "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Expectation\/show()","kind":"symbol","type":"topic","url":"\/documentation\/puddles\/expectation\/show()"},"doc://Puddles/tutorials/Puddles/01-Introduction#The-Root-Coordinator":{"role":"pseudoSymbol","title":"The Root Coordinator","abstract":[{"type":"text","text":"Building an app using "},{"type":"codeVoice","code":"Puddles"},{"type":"text","text":" is easy and fast."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/01-Introduction#The-Root-Coordinator","kind":"section","type":"section","url":"\/tutorials\/puddles\/01-introduction#The-Root-Coordinator"},"expectations-01-03":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    @State private var isShowingConfirmationAlert: Bool = false","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        Alert(","            title: \"Do you want to delete this?\",","            isPresented: $isShowingConfirmationAlert) {","                Button(\"Cancel\", role: .cancel) {","                    \/\/ Cancel","                }","                Button(\"OK\") {","                    \/\/ Confirm","                }","            } message: {","                Text(\"This cannot be reversed!\")","            }","    }","","    func handleAction(_ action: Action) async {","        \/\/ Handle action","    }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-01-03","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]},"doc://Puddles/tutorials/Puddles/06-ProvidingData#Section-1":{"role":"pseudoSymbol","title":"Section 1","abstract":[{"type":"text","text":"Dependency Injection is essential in keeping code reusable, testable and previewable."}],"identifier":"doc:\/\/Puddles\/tutorials\/Puddles\/06-ProvidingData#Section-1","kind":"section","type":"section","url":"\/tutorials\/puddles\/06-providingdata#Section-1"},"expectations-01-05":{"syntax":"swift","content":["import SwiftUI","import Puddles","","struct MyCoordinator: Coordinator {","    @StateObject var interface: MyView.Interface = .init()","","    @State private var isShowingConfirmationAlert: Bool = false","","    var entryView: some View {","        MyView(interface: interface)","    }","","    func navigation() -> some NavigationPattern {","        Alert(","            title: \"Do you want to delete this?\",","            isPresented: $isShowingConfirmationAlert) {","                Button(\"Cancel\", role: .cancel) {","                    \/\/ Do nothing","                }","                Button(\"OK\") {","                    delete()","                }","            } message: {","                Text(\"This cannot be reversed!\")","            }","    }","","    func handleAction(_ action: Action) async {","        switch action {","        case .deleteButtonTapped:","            isShowingConfirmationAlert = true","        }","    }","","    private func delete() {","        \/\/ Apply the deletion","    }","}"],"fileName":"MyCoordinator.swift","identifier":"expectations-01-05","type":"file","fileType":"swift","highlights":[{"line":18},{"line":21},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37}]},"doc://Puddles/documentation/Puddles/Coordinator/handleAction(_:)-4le7d":{"conformance":{"constraints":[{"type":"codeVoice","code":"Interface.Action"},{"type":"text","text":" is "},{"type":"codeVoice","code":"NoAction"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"handleAction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleAction"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:7Puddles11CoordinatorP6Actiona"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"A method you can provide to handle incoming actions from the  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator"},{"type":"text","text":"’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/interface-swift.property-4rvqq"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/Coordinator\/handleAction(_:)-4le7d","kind":"symbol","type":"topic","url":"\/documentation\/puddles\/coordinator\/handleaction(_:)-4le7d"},"Background1.png":{"alt":"A colorful, abstract background image","type":"image","identifier":"Background1.png","variants":[{"url":"\/images\/Background1.png","traits":["1x","light"]}]},"doc://Puddles/documentation/Puddles/ViewInterface":{"role":"symbol","title":"ViewInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewInterface"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" that provides the means of sending signals to a "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":"."}],"identifier":"doc:\/\/Puddles\/documentation\/Puddles\/ViewInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewInterface"}],"url":"\/documentation\/puddles\/viewinterface"}}}